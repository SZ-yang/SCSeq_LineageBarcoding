error = function(e){
list(p.value = NA, R2_welch = NA)
})
c(res$p.value, res$R2_welch)
})
gene_mat <- t(gene_mat)
rownames(gene_mat) <- rownames(dat)
colnames(gene_mat) <- c("p.value", "R2_welch")
rm_idx <- unique(c(which(is.na(gene_mat[,1])), which(is.na(gene_mat[,2]))))
if(length(rm_idx) > 0){
gene_mat <- gene_mat[-rm_idx,]
}
head(gene_mat)
library(org.Mm.eg.db)
library(clusterProfiler)
tmp <- gene_mat[,2]
tmp <- tmp[order(tmp, decreasing = TRUE)]
set.seed(10)
gse <- clusterProfiler::gseGO(
tmp,
ont = "MF", # what kind of pathways are you interested in
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
pvalueCutoff = 0.05,       # p-value threshold for pathways
minGSSize = 10,            # minimum gene set size
maxGSSize = 500,            # maximum gene set size
scoreType = "pos"
)
gse_df <- as.data.frame(gse)
gse_df[ c("Description","p.adjust")]
plot1 <-dotplot(gse, showCategory=30) + ggtitle("dotplot for GSEA")
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova-supercluster_gsea.png"),
height = 8, width = 4)
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova-supercluster_gsea.png"),
height = 8, width = 6)
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova-supercluster_gsea.png"),
height = 7, width = 5)
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova-supercluster_gsea.png"),
height = 7, width = 6)
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova_Actin_by-umap.png"),
height = 4, width = 8)
seurat_obj$Actin2 <- pmax(seurat_obj$Actin1, 0)
seurat_obj <- Seurat::AddModuleScore(
seurat_obj,
features = list(actin_genes),
ctrl = 50,
name = "Actin"
)
actin_genes <- gse_df["GO:0051015", "core_enrichment"]
actin_genes <- strsplit(actin_genes, split = "/")[[1]]
seurat_obj <- Seurat::AddModuleScore(
seurat_obj,
features = list(actin_genes),
ctrl = 50,
name = "Actin"
)
seurat_obj$Actin2 <- pmax(seurat_obj$Actin1, 0)
plot1 <- scCustomize::FeaturePlot_scCustom(seurat_obj,
features = "Actin2",
reduction = "lcl.umap")
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova_Actin_by-lcl.png"),
height = 5, width = 8)
plot1 <- scCustomize::FeaturePlot_scCustom(seurat_obj,
features = "Actin2",
reduction = "umap")
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova_Actin_by-umap.png"),
height = 5, width = 8)
plot1 <-dotplot(gse, showCategory=30) + ggtitle("dotplot for GSEA")
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova-supercluster_gsea.png"),
height = 6, width = 5)
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_anova-supercluster_gsea.png"),
height = 5, width = 5)
rm(list=ls())
library(Seurat)
library(ggplot2)
library(ggrepel)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup7_joshua-results_dylan/"
plot_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/git/SCSeq_LineageBarcoding/fig/kevin/Writeup7/"
load(paste0(out_folder, "adata_with_lcl.RData"))
# Plot just: dabtramtocis and cistodabtram
kk <- 1
embedding <- embedding_list[[kk]]
embedding_name <- names(embedding_list)[kk]
Seurat::Idents(seurat_obj) <- "OG_condition"
embedding_list <- list(
umap = seurat_obj[["umap"]]@cell.embeddings,
lcl = seurat_obj[["lcl.umap"]]@cell.embeddings
)
# Plot just: dabtramtocis and cistodabtram
kk <- 1
embedding <- embedding_list[[kk]]
embedding_name <- names(embedding_list)[kk]
conditions <- c("dabtramtocis", "cistodabtram")
order_vec <- levels(seurat_obj$OG_condition)
order_vec <- c(setdiff(order_vec, conditions), conditions)
color_vec <- seurat_obj@misc[["OG_condition_colors"]]
color_vec[!names(color_vec) %in% conditions] <- "gray"
df <- cbind(data.frame(embedding),
seurat_obj$OG_condition)
colnames(df) <- c("x", "y", "OG_condition")
# shuffle indicies
cell_idx <- unlist(lapply(order_vec, function(grouping){
which(seurat_obj$OG_condition == grouping)
}))
df <- df[cell_idx,]
# shuffle the conditions
cell_idx <- which(df$OG_condition %in% conditions)
df[cell_idx,] <- df[sample(cell_idx),]
# shuffle the conditions
cell_idx <- which(df$OG_condition %in% conditions)
df[cell_idx,] <- df[sample(cell_idx),]
plot1 <- ggplot2::ggplot(data = df, ggplot2::aes(x = x, y = y, ))
plot1 <- plot1 + ggplot2::geom_point(ggplot2::aes(
color = OG_condition,
size  = ifelse(OG_condition %in% conditions, 2, 1)
))
plot1 <- plot1 + ggplot2::scale_colour_manual(values = color_vec)
plot1 <- plot1 + ggplot2::scale_size_identity()
plot1 <- plot1 + cowplot::theme_cowplot()
plot1 <- plot1 + ggplot2::labs(x = "", y = "")
plot1 <- plot1 + Seurat::NoLegend()
ggplot2::ggsave(plot1,
filename = paste0(plot_folder, "Writeup7_lcl_embedding-", embedding_name, "_dabtram-cis.png"),
height = 5, width = 5)
diff(1/(1:8))
rm(list=ls())
library(Seurat)
library(ggplot2)
library(ggrepel)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup7_joshua-results_dylan/"
plot_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/git/SCSeq_LineageBarcoding/fig/kevin/Writeup7/"
load(paste0(out_folder, "adata_with_lcl.RData"))
ls()
train_embedding <- read.csv("/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writuep9/train_adata_LCL.csv")
head(train_embedding)
train_embedding <- read.csv("/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writuep9/train_adata_LCL.csv",
row.names = TRUE)
?read.csv
rownames(train_embedding) <- train_embedding[,1]
train_embedding <- as.matrix(train_embedding)
head(train_embedding)
train_embedding <- read.csv("/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writuep9/train_adata_LCL.csv")
rownames(train_embedding) <- train_embedding[,1]
train_embedding <- as.matrix(train_embedding[,-1])
head(train_embedding)
test_embedding <- read.csv("/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writuep9/test_adata_LCL.csv")
rownames(test_embedding) <- test_embedding[,1]
test_embedding <- as.matrix(test_embedding[,-1])
Seurat::Cells(seurat_obj)[1:5]
table(rownames(train_embedding) %in% Seurat::Cells(seurat_obj))
table(rownames(test_embedding) %in% Seurat::Cells(seurat_obj))
LCL_embedding <- matrix(NA, nrow = length(Seurat::Cells(seurat_obj)), ncol = ncol(train_embedding))
LCL_embedding <- matrix(NA, nrow = length(Seurat::Cells(seurat_obj)), ncol = ncol(train_embedding))
rownames(LCL_embedding) <- Seurat::Cells(seurat_obj)
colnames(LCL_embedding) <- paste0("LCL_", 1:ncol(LCL_embedding))
LCL_embedding[rownames(train_embedding),] <- train_embedding
LCL_embedding[rownames(test_embedding),] <- test_embedding
table(is.na(LCL_embedding))
seurat_obj
seurat_obj[["lcl"]] <- Seurat::CreateDimReducObject(LCL_embedding)
set.seed(10)
seurat_obj[["lcl.umap"]] <- Seurat::RunUMAP(seurat_obj,
reduction = "lcl",
dims = 1:ncol(LCL_embedding))
dim(LCL_embedding)
set.seed(10)
seurat_obj <- Seurat::RunUMAP(seurat_obj,
reduction = "lcl",
dims = 1:ncol(LCL_embedding),
assay = 'RNA',
reduction.name = 'lcl.umap',
reduction.key = 'lclUMAP_')
testing_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(testing_vec) <- Seurat::Cells(seurat_obj)
testing_vec[rownames(test_embedding)] <- TRUE
seurat_obj$test <- testing_vec
head(seurat_obj@meta.data)
Seurat::DimPlot(seurat_obj,
reduction = "lcl.umap",
group.by = "OG_condition")
Seurat::DimPlot(seurat_obj,
reduction = "lcl.umap",
group.by = "OG_condition",
cols = seurat_obj@misc[["OG_condition_colors"]])
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "OG_condition",
colors_use = seurat_obj@misc[["OG_condition_colors"]])
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "test")
tab_vec <- table(seurat_obj$Lineage)
tab_vec <- order(tab_vec, decreasing = TRUE)
tab_vec <- table(seurat_obj$Lineage)
tab_vec <- sort(tab_vec, decreasing = TRUE)
i=1
lineage_name <- name(tab_vec)[i]
lineage_name <- names(tab_vec)[i]
lineage_name
tab_vec <- table(seurat_obj$Lineage)
tab_vec <- sort(tab_vec, decreasing = TRUE)
largest_lineage_vec <- rep(NA, length(Seurat::Cells(seurat_obj)))
names(largest_lineage_vec) <- Seurat::Cells(seurat_obj)
for(i in 1:5){
lineage_name <- names(tab_vec)[i]
largest_lineage_vec[which(seurat_obj$Lineage == lineage_name)] <- paste0("Lineage", i)
}
table(largest_lineage_vec)
seurat_obj$largest_lineage <- largest_lineage_vec
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec)
color_vec <- c(Lineage1 = rgb(203, 50, 39, maxColorValue = 255),
Lineage2 = rgb(65, 113, 170, maxColorValue = 255),
Lineage3 = rgb(131, 72, 149, maxColorValue = 255),
Lineage4 = rgb(92, 163, 77, maxColorValue = 255),
Lineage5 = rgb(235, 123, 44, maxColorValue = 255),
other = "gray")
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec)
?scCustomize::DimPlot_scCustom
?Seurat::DimPlot
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
color_vec <- c(Lineage1 = rgb(203, 50, 39, maxColorValue = 255),
Lineage2 = rgb(65, 113, 170, maxColorValue = 255),
Lineage3 = rgb(131, 72, 149, maxColorValue = 255),
Lineage4 = rgb(92, 163, 77, maxColorValue = 255),
Lineage5 = rgb(235, 123, 44, maxColorValue = 255),
other = "gray")
tab_vec <- table(seurat_obj$Lineage)
tab_vec <- sort(tab_vec, decreasing = TRUE)
largest_lineage_vec <- rep("other", length(Seurat::Cells(seurat_obj)))
names(largest_lineage_vec) <- Seurat::Cells(seurat_obj)
for(i in 1:5){
lineage_name <- names(tab_vec)[i]
largest_lineage_vec[which(seurat_obj$Lineage == lineage_name)] <- paste0("Lineage", i)
}
seurat_obj$largest_lineage <- largest_lineage_vec
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = "other")
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
seurat_obj
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
rm(list=ls())
library(Seurat)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup9b/"
load(paste0(out_folder, "Writeup9b_celltag-data_with_LCL.RData"))
train_metadata <- read.csv(paste0(out_folder, "train_obs.csv"))
head(train_metadata)
test_metadata <- read.csv(paste0(out_folder, "test_obs.csv"))
rownames(test_metadata) <- test_metadata[,1]
names(clone_vec) <- c(rownames(train_metadata), rownames(test_metadata))
clone_vec <- c(train_metadata$clone_id, test_metadata$clone_id)
names(clone_vec) <- c(rownames(train_metadata), rownames(test_metadata))
seurat_obj$clone_id <- clone_vec[Seurat::Cells(seurat_obj)]
length(clone_vec)
seurat_obj
clone_vec <- rep(NA, length(Seurat::Cells(seurat_obj)))
names(clone_vec) <- Seurat::Cells(seurat_obj)
clone_vec[rownames(train_metadata)] <- train_metadata$clone_id
clone_vec[rownames(test_metadata)] <- test_metadata$clone_id
seurat_obj$clone_id <- clone_vec
testing_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(testing_vec) <- Seurat::Cells(seurat_obj)
testing_vec[rownames(test_embedding)] <- TRUE
table(testing_vec)
testing_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(testing_vec) <- Seurat::Cells(seurat_obj)
testing_vec[rownames(test_metadata)] <- TRUE
table(testing_vec)
seurat_obj$test <- testing_vec
seurat_obj
set.seed(10)
set.seed(10)
seurat_obj <- Seurat::RunUMAP(seurat_obj,
reduction = "lcl",
dims = 1:ncol(seurat_obj[["lcl"]]@cell.embeddings),
assay = 'RNA',
reduction.name = 'lcl.umap',
reduction.key = 'lclUMAP_')
head(seurat_obj@meta.data)
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "cell_type")
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "test")
color_vec <- c(Lineage1 = rgb(203, 50, 39, maxColorValue = 255),
Lineage2 = rgb(65, 113, 170, maxColorValue = 255),
Lineage3 = rgb(131, 72, 149, maxColorValue = 255),
Lineage4 = rgb(92, 163, 77, maxColorValue = 255),
Lineage5 = rgb(235, 123, 44, maxColorValue = 255),
other = "gray")
tab_vec <- table(seurat_obj$clone_id)
tab_vec <- sort(tab_vec, decreasing = TRUE)
largest_lineage_vec <- rep("other", length(Seurat::Cells(seurat_obj)))
names(largest_lineage_vec) <- Seurat::Cells(seurat_obj)
for(i in 1:5){
lineage_name <- names(tab_vec)[i]
largest_lineage_vec[which(seurat_obj$clone_id == lineage_name)] <- paste0("Lineage", i)
}
seurat_obj$largest_lineage <- largest_lineage_vec
table(seurat_obj$largest_lineage)
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
seurat_obj
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "python_X_tsne",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
rm(list=ls())
library(Seurat)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup9b/"
load(paste0(out_folder, "Writeup9b_celltag-data_with_LCL.RData"))
rm(list=ls())
library(Seurat)
load("~/kzlinlab/data/biddy_2018_celltag/biddy_seurat.RData")
rm(list=ls())
library(Seurat)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup9b/"
load(paste0(out_folder, "Writeup9b_celltag-data_with_LCL.RData"))
train_embedding <- read.csv(paste0(out_folder, "train_adata_LCL_other-lcl.csv"))
rownames(train_embedding) <- train_embedding[,1]
train_embedding <- as.matrix(train_embedding[,-1])
test_embedding <- read.csv(paste0(out_folder, "test_adata_LCL_other-lcl.csv"))
rownames(test_embedding) <- test_embedding[,1]
test_embedding <- as.matrix(test_embedding[,-1])
table(rownames(train_embedding) %in% Seurat::Cells(seurat_obj))
table(rownames(test_embedding) %in% Seurat::Cells(seurat_obj))
table(rownames(train_embedding) %in% Seurat::Cells(seurat_obj))
table(rownames(test_embedding) %in% Seurat::Cells(seurat_obj))
LCL_embedding <- matrix(NA, nrow = length(Seurat::Cells(seurat_obj)), ncol = ncol(train_embedding))
rownames(LCL_embedding) <- Seurat::Cells(seurat_obj)
colnames(LCL_embedding) <- paste0("LCL_", 1:ncol(LCL_embedding))
LCL_embedding[rownames(train_embedding),] <- train_embedding
LCL_embedding[rownames(test_embedding),] <- test_embedding
keep_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(keep_vec) <- Seurat::Cells(seurat_obj)
keep_vec[which(!is.na(LCL_embedding[,1]))] <- TRUE
seurat_obj$keep <- keep_vec
seurat_obj <- subset(seurat_obj, keep == TRUE)
rm(list=ls())
library(Seurat)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup9b/"
load(paste0(out_folder, "Writeup9b_celltag-data_with_LCL.RData"))
train_metadata <- read.csv(paste0(out_folder, "train_obs.csv"))
rownames(train_metadata) <- train_metadata[,1]
test_metadata <- read.csv(paste0(out_folder, "test_obs.csv"))
rownames(test_metadata) <- test_metadata[,1]
clone_vec <- rep(NA, length(Seurat::Cells(seurat_obj)))
names(clone_vec) <- Seurat::Cells(seurat_obj)
clone_vec[rownames(train_metadata)] <- train_metadata$clone_id
clone_vec[rownames(test_metadata)] <- test_metadata$clone_id
seurat_obj$clone_id <- clone_vec
testing_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(testing_vec) <- Seurat::Cells(seurat_obj)
testing_vec[rownames(test_metadata)] <- TRUE
seurat_obj$test <- testing_vec
set.seed(10)
seurat_obj <- Seurat::RunUMAP(seurat_obj,
reduction = "lcl",
dims = 1:ncol(seurat_obj[["lcl"]]@cell.embeddings),
assay = 'RNA',
reduction.name = 'lcl.umap',
reduction.key = 'lclUMAP_')
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "cell_type")
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "test")
rm(list=ls())
library(Seurat)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup9b/"
load(paste0(out_folder, "Writeup9b_celltag-data_with_LCL.RData"))
train_embedding <- read.csv(paste0(out_folder, "train_adata_LCL_other-lcl.csv"))
rownames(train_embedding) <- train_embedding[,1]
train_embedding <- as.matrix(train_embedding[,-1])
test_embedding <- read.csv(paste0(out_folder, "test_adata_LCL_other-lcl.csv"))
rownames(test_embedding) <- test_embedding[,1]
test_embedding <- as.matrix(test_embedding[,-1])
table(rownames(train_embedding) %in% Seurat::Cells(seurat_obj))
table(rownames(test_embedding) %in% Seurat::Cells(seurat_obj))
LCL_embedding <- matrix(NA, nrow = length(Seurat::Cells(seurat_obj)), ncol = ncol(train_embedding))
rownames(LCL_embedding) <- Seurat::Cells(seurat_obj)
colnames(LCL_embedding) <- paste0("LCL_", 1:ncol(LCL_embedding))
LCL_embedding[rownames(train_embedding),] <- train_embedding
LCL_embedding[rownames(test_embedding),] <- test_embedding
keep_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(keep_vec) <- Seurat::Cells(seurat_obj)
keep_vec[which(!is.na(LCL_embedding[,1]))] <- TRUE
seurat_obj$keep <- keep_vec
seurat_obj <- subset(seurat_obj, keep == TRUE)
seurat_obj
rm(list=ls())
library(Seurat)
out_folder <- "/Users/kevinlin/Library/CloudStorage/Dropbox/Collaboration-and-People/Joshua/out/kevin/Writeup9b/"
load(paste0(out_folder, "Writeup9b_celltag-data_with_LCL.RData"))
train_embedding <- read.csv(paste0(out_folder, "train_adata_LCL_other-lcl.csv"))
rownames(train_embedding) <- train_embedding[,1]
train_embedding <- as.matrix(train_embedding[,-1])
test_embedding <- read.csv(paste0(out_folder, "test_adata_LCL_other-lcl.csv"))
rownames(test_embedding) <- test_embedding[,1]
test_embedding <- as.matrix(test_embedding[,-1])
table(rownames(train_embedding) %in% Seurat::Cells(seurat_obj))
table(rownames(test_embedding) %in% Seurat::Cells(seurat_obj))
LCL_embedding <- matrix(NA, nrow = length(Seurat::Cells(seurat_obj)), ncol = ncol(train_embedding))
rownames(LCL_embedding) <- Seurat::Cells(seurat_obj)
colnames(LCL_embedding) <- paste0("LCL_", 1:ncol(LCL_embedding))
LCL_embedding[rownames(train_embedding),] <- train_embedding
LCL_embedding[rownames(test_embedding),] <- test_embedding
seurat_obj[["lcl"]] <- Seurat::CreateDimReducObject(LCL_embedding,
assay = "RNA")
set.seed(10)
seurat_obj <- Seurat::RunUMAP(seurat_obj,
reduction = "lcl",
dims = 1:ncol(seurat_obj[["lcl"]]@cell.embeddings),
assay = 'RNA',
reduction.name = 'lcl.umap',
reduction.key = 'lclUMAP_')
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "cell_type")
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "test")
train_metadata <- read.csv(paste0(out_folder, "train_obs.csv"))
rownames(train_metadata) <- train_metadata[,1]
test_metadata <- read.csv(paste0(out_folder, "test_obs.csv"))
rownames(test_metadata) <- test_metadata[,1]
clone_vec <- rep(NA, length(Seurat::Cells(seurat_obj)))
names(clone_vec) <- Seurat::Cells(seurat_obj)
clone_vec[rownames(train_metadata)] <- train_metadata$clone_id
clone_vec[rownames(test_metadata)] <- test_metadata$clone_id
seurat_obj$clone_id <- clone_vec
testing_vec <- rep(FALSE, length(Seurat::Cells(seurat_obj)))
names(testing_vec) <- Seurat::Cells(seurat_obj)
testing_vec[rownames(test_metadata)] <- TRUE
seurat_obj$test <- testing_vec
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "test")
color_vec <- c(Lineage1 = rgb(203, 50, 39, maxColorValue = 255),
Lineage2 = rgb(65, 113, 170, maxColorValue = 255),
Lineage3 = rgb(131, 72, 149, maxColorValue = 255),
Lineage4 = rgb(92, 163, 77, maxColorValue = 255),
Lineage5 = rgb(235, 123, 44, maxColorValue = 255),
other = "gray")
tab_vec <- table(seurat_obj$clone_id)
tab_vec <- sort(tab_vec, decreasing = TRUE)
largest_lineage_vec <- rep("other", length(Seurat::Cells(seurat_obj)))
names(largest_lineage_vec) <- Seurat::Cells(seurat_obj)
for(i in 1:5){
lineage_name <- names(tab_vec)[i]
largest_lineage_vec[which(seurat_obj$clone_id == lineage_name)] <- paste0("Lineage", i)
}
seurat_obj$largest_lineage <- largest_lineage_vec
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "lcl.umap",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
Seurat::Idents(seurat_obj) <- "largest_lineage"
scCustomize::DimPlot_scCustom(seurat_obj,
reduction = "python_X_tsne",
group.by = "largest_lineage",
colors_use = color_vec,
order = paste0("Lineage", 1:5))
